{"version":3,"file":"preload.js","mappings":"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","sources":["webpack://@lux-wallet/electron-chrome-extensions/./src/isomorphic/ipc.ts","webpack://@lux-wallet/electron-chrome-extensions/./src/renderer/event.ts","webpack://@lux-wallet/electron-chrome-extensions/./src/renderer/index.ts","webpack://@lux-wallet/electron-chrome-extensions/external node-commonjs \"electron\"","webpack://@lux-wallet/electron-chrome-extensions/webpack/bootstrap","webpack://@lux-wallet/electron-chrome-extensions/webpack/runtime/compat get default export","webpack://@lux-wallet/electron-chrome-extensions/webpack/runtime/define property getters","webpack://@lux-wallet/electron-chrome-extensions/webpack/runtime/hasOwnProperty shorthand","webpack://@lux-wallet/electron-chrome-extensions/webpack/runtime/make namespace object","webpack://@lux-wallet/electron-chrome-extensions/./src/preload.ts"],"sourcesContent":["export const formatIpcName = (name: string) => `crx-${name}`","import { ipcRenderer } from 'electron'\r\nimport { formatIpcName } from '../isomorphic/ipc'\r\n\r\nconst listenerMap = new Map<string, number>()\r\n\r\nexport const addExtensionListener = (extensionId: string, name: string, callback: Function) => {\r\n  const listenerCount = listenerMap.get(name) || 0\r\n\r\n  if (listenerCount === 0) {\r\n    // TODO: should these IPCs be batched in a microtask?\r\n    ipcRenderer.send('crx-add-listener', extensionId, name)\r\n  }\r\n\r\n  listenerMap.set(name, listenerCount + 1)\r\n\r\n  ipcRenderer.addListener(formatIpcName(name), function (event, ...args) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(name, '(result)', ...args)\r\n    }\r\n    callback(...args)\r\n  })\r\n}\r\n\r\nexport const removeExtensionListener = (extensionId: string, name: string, callback: any) => {\r\n  if (listenerMap.has(name)) {\r\n    const listenerCount = listenerMap.get(name) || 0\r\n\r\n    if (listenerCount <= 1) {\r\n      listenerMap.delete(name)\r\n\r\n      ipcRenderer.send('crx-remove-listener', extensionId, name)\r\n    } else {\r\n      listenerMap.set(name, listenerCount - 1)\r\n    }\r\n  }\r\n\r\n  ipcRenderer.removeListener(formatIpcName(name), callback)\r\n}\r\n","import { ipcRenderer, contextBridge, webFrame } from 'electron'\r\nimport { addExtensionListener, removeExtensionListener } from './event'\r\n\r\nexport const injectExtensionAPIs = () => {\r\n  interface ExtensionMessageOptions {\r\n    noop?: boolean\r\n    serialize?: (...args: any[]) => any[]\r\n  }\r\n\r\n  const invokeExtension = async function (\r\n    extensionId: string,\r\n    fnName: string,\r\n    options: ExtensionMessageOptions = {},\r\n    ...args: any[]\r\n  ) {\r\n    const callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(fnName, args)\r\n    }\r\n\r\n    if (options.noop) {\r\n      console.warn(`${fnName} is not yet implemented.`)\r\n      if (callback) callback()\r\n      return\r\n    }\r\n\r\n    if (options.serialize) {\r\n      args = options.serialize(...args)\r\n    }\r\n\r\n    let result\r\n\r\n    try {\r\n      result = await ipcRenderer.invoke('crx-msg', extensionId, fnName, ...args)\r\n    } catch (e) {\r\n      // TODO: Set chrome.runtime.lastError?\r\n      console.error(e)\r\n      result = undefined\r\n    }\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(fnName, '(result)', result)\r\n    }\r\n\r\n    if (callback) {\r\n      callback(result)\r\n    } else {\r\n      return result\r\n    }\r\n  }\r\n\r\n  const electronContext = {\r\n    invokeExtension,\r\n    addExtensionListener,\r\n    removeExtensionListener,\r\n  }\r\n\r\n  // Function body to run in the main world.\r\n  // IMPORTANT: This must be self-contained, no closure variable will be included!\r\n  function mainWorldScript() {\r\n    // Use context bridge API or closure variable when context isolation is disabled.\r\n    const electron = ((window as any).electron as typeof electronContext) || electronContext\r\n\r\n    const chrome = window.chrome || {}\r\n    const extensionId = chrome.runtime?.id\r\n\r\n    // NOTE: This uses a synchronous IPC to get the extension manifest.\r\n    // To avoid this, JS bindings for RendererExtensionRegistry would be\r\n    // required.\r\n    const manifest: chrome.runtime.Manifest =\r\n      (extensionId && chrome.runtime.getManifest()) || ({} as any)\r\n\r\n    const invokeExtension =\r\n      (fnName: string, opts: ExtensionMessageOptions = {}) =>\r\n      (...args: any[]) =>\r\n        electron.invokeExtension(extensionId, fnName, opts, ...args)\r\n\r\n    function imageData2base64(imageData: ImageData) {\r\n      const canvas = document.createElement('canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      if (!ctx) return null\r\n\r\n      canvas.width = imageData.width\r\n      canvas.height = imageData.height\r\n      ctx.putImageData(imageData, 0, 0)\r\n\r\n      return canvas.toDataURL()\r\n    }\r\n\r\n    class ExtensionEvent<T extends Function> implements chrome.events.Event<T> {\r\n      constructor(private name: string) {}\r\n\r\n      addListener(callback: T) {\r\n        electron.addExtensionListener(extensionId, this.name, callback)\r\n      }\r\n      removeListener(callback: T) {\r\n        electron.removeExtensionListener(extensionId, this.name, callback)\r\n      }\r\n\r\n      getRules(callback: (rules: chrome.events.Rule[]) => void): void\r\n      getRules(ruleIdentifiers: string[], callback: (rules: chrome.events.Rule[]) => void): void\r\n      getRules(ruleIdentifiers: any, callback?: any) {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      hasListener(callback: T): boolean {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      removeRules(ruleIdentifiers?: string[] | undefined, callback?: (() => void) | undefined): void\r\n      removeRules(callback?: (() => void) | undefined): void\r\n      removeRules(ruleIdentifiers?: any, callback?: any) {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      addRules(\r\n        rules: chrome.events.Rule[],\r\n        callback?: ((rules: chrome.events.Rule[]) => void) | undefined\r\n      ): void {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      hasListeners(): boolean {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n    }\r\n\r\n    class ChromeSetting implements Partial<chrome.types.ChromeSetting> {\r\n      set() {}\r\n      get() {}\r\n      clear() {}\r\n      // onChange: chrome.types.ChromeSettingChangedEvent\r\n    }\r\n\r\n    type DeepPartial<T> = {\r\n      [P in keyof T]?: DeepPartial<T[P]>\r\n    }\r\n\r\n    type APIFactoryMap = {\r\n      [apiName in keyof typeof chrome]: {\r\n        shouldInject?: () => boolean\r\n        factory: (base: DeepPartial<typeof chrome[apiName]>) => DeepPartial<typeof chrome[apiName]>\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Factories for each additional chrome.* API.\r\n     */\r\n    const apiDefinitions: Partial<APIFactoryMap> = {\r\n      browserAction: {\r\n        shouldInject: () => !!manifest.browser_action,\r\n        factory: (base) => {\r\n          const api = {\r\n            ...base,\r\n\r\n            setTitle: invokeExtension('browserAction.setTitle'),\r\n            getTitle: invokeExtension('browserAction.getTitle'),\r\n\r\n            setIcon: invokeExtension('browserAction.setIcon', {\r\n              serialize: (details: any) => {\r\n                if (details.imageData) {\r\n                  if (details.imageData instanceof ImageData) {\r\n                    details.imageData = imageData2base64(details.imageData)\r\n                  } else {\r\n                    details.imageData = Object.entries(details.imageData).reduce(\r\n                      (obj: any, pair: any[]) => {\r\n                        obj[pair[0]] = imageData2base64(pair[1])\r\n                        return obj\r\n                      },\r\n                      {}\r\n                    )\r\n                  }\r\n                }\r\n\r\n                return [details]\r\n              },\r\n            }),\r\n\r\n            setPopup: invokeExtension('browserAction.setPopup'),\r\n            getPopup: invokeExtension('browserAction.getPopup'),\r\n\r\n            setBadgeText: invokeExtension('browserAction.setBadgeText'),\r\n            getBadgeText: invokeExtension('browserAction.getBadgeText'),\r\n\r\n            setBadgeBackgroundColor: invokeExtension('browserAction.setBadgeBackgroundColor'),\r\n            getBadgeBackgroundColor: invokeExtension('browserAction.getBadgeBackgroundColor'),\r\n\r\n            enable: invokeExtension('browserAction.enable', { noop: true }),\r\n            disable: invokeExtension('browserAction.disable', { noop: true }),\r\n\r\n            onClicked: new ExtensionEvent('browserAction.onClicked'),\r\n          }\r\n\r\n          return api\r\n        },\r\n      },\r\n\r\n      commands: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            getAll: invokeExtension('commands.getAll'),\r\n            onCommand: new ExtensionEvent('commands.onCommand'),\r\n          }\r\n        },\r\n      },\r\n\r\n      contextMenus: {\r\n        factory: (base) => {\r\n          let menuCounter = 0\r\n          const menuCallbacks: {\r\n            [key: string]: chrome.contextMenus.CreateProperties['onclick']\r\n          } = {}\r\n          const menuCreate = invokeExtension('contextMenus.create')\r\n\r\n          let hasInternalListener = false\r\n          const addInternalListener = () => {\r\n            api.onClicked.addListener((info, tab) => {\r\n              const callback = menuCallbacks[info.menuItemId]\r\n              if (callback && tab) callback(info, tab)\r\n            })\r\n            hasInternalListener = true\r\n          }\r\n\r\n          const api = {\r\n            ...base,\r\n            create: function (\r\n              createProperties: chrome.contextMenus.CreateProperties,\r\n              callback?: Function\r\n            ) {\r\n              if (typeof createProperties.id === 'undefined') {\r\n                createProperties.id = `${++menuCounter}`\r\n              }\r\n              if (createProperties.onclick) {\r\n                if (!hasInternalListener) addInternalListener()\r\n                menuCallbacks[createProperties.id] = createProperties.onclick\r\n                delete createProperties.onclick\r\n              }\r\n              menuCreate(createProperties, callback)\r\n              return createProperties.id\r\n            },\r\n            update: invokeExtension('contextMenus.update', { noop: true }),\r\n            remove: invokeExtension('contextMenus.remove'),\r\n            removeAll: invokeExtension('contextMenus.removeAll'),\r\n            onClicked: new ExtensionEvent<\r\n              (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => void\r\n            >('contextMenus.onClicked'),\r\n          }\r\n\r\n          return api\r\n        },\r\n      },\r\n\r\n      cookies: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            get: invokeExtension('cookies.get'),\r\n            getAll: invokeExtension('cookies.getAll'),\r\n            set: invokeExtension('cookies.set'),\r\n            remove: invokeExtension('cookies.remove'),\r\n            getAllCookieStores: invokeExtension('cookies.getAllCookieStores'),\r\n            onChanged: new ExtensionEvent('cookies.onChanged'),\r\n          }\r\n        },\r\n      },\r\n\r\n      extension: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            isAllowedIncognitoAccess: () => false,\r\n            // TODO: Add native implementation\r\n            getViews: () => [],\r\n          }\r\n        },\r\n      },\r\n\r\n      notifications: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            clear: invokeExtension('notifications.clear'),\r\n            create: invokeExtension('notifications.create'),\r\n            getAll: invokeExtension('notifications.getAll'),\r\n            getPermissionLevel: invokeExtension('notifications.getPermissionLevel'),\r\n            update: invokeExtension('notifications.update'),\r\n            onClicked: new ExtensionEvent('notifications.onClicked'),\r\n            onButtonClicked: new ExtensionEvent('notifications.onButtonClicked'),\r\n            onClosed: new ExtensionEvent('notifications.onClosed'),\r\n          }\r\n        },\r\n      },\r\n\r\n      privacy: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            network: {\r\n              networkPredictionEnabled: new ChromeSetting(),\r\n              webRTCIPHandlingPolicy: new ChromeSetting(),\r\n            },\r\n            websites: {\r\n              hyperlinkAuditingEnabled: new ChromeSetting(),\r\n            },\r\n          }\r\n        },\r\n      },\r\n\r\n      runtime: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            openOptionsPage: invokeExtension('runtime.openOptionsPage'),\r\n          }\r\n        },\r\n      },\r\n\r\n      storage: {\r\n        factory: (base) => {\r\n          const local = base && base.local\r\n          return {\r\n            ...base,\r\n            // TODO: provide a backend for browsers to opt-in to\r\n            managed: local,\r\n            sync: local,\r\n          }\r\n        },\r\n      },\r\n\r\n      tabs: {\r\n        factory: (base) => {\r\n          const api = {\r\n            ...base,\r\n            create: invokeExtension('tabs.create'),\r\n            /**\r\n             * @see https://developer.chrome.com/docs/extensions/reference/tabs/#method-executeScript\r\n             * @deprecated since chrome 91\r\n             */\r\n            executeScript: function (arg1: unknown, arg2: unknown, arg3: unknown) {\r\n              // Electron's implementation of chrome.tabs.executeScript is in\r\n              // C++, but it doesn't support implicit execution in the active\r\n              // tab. To handle this, we need to get the active tab ID and\r\n              // pass it into the C++ implementation ourselves.\r\n              if (typeof arg1 === 'object') {\r\n                api.query(\r\n                  { active: true, lastFocusedWindow: true },\r\n                  ([activeTab]: chrome.tabs.Tab[]) => {\r\n                    api.executeScript(activeTab.id, arg1, arg2)\r\n                  }\r\n                )\r\n              } else {\r\n                ;(base.executeScript as typeof chrome.tabs.executeScript)(\r\n                  arg1 as number,\r\n                  arg2 as chrome.tabs.InjectDetails,\r\n                  arg3 as () => {}\r\n                )\r\n              }\r\n            },\r\n            get: invokeExtension('tabs.get'),\r\n            getCurrent: invokeExtension('tabs.getCurrent'),\r\n            getAllInWindow: invokeExtension('tabs.getAllInWindow'),\r\n            insertCSS: invokeExtension('tabs.insertCSS'),\r\n            query: invokeExtension('tabs.query'),\r\n            reload: invokeExtension('tabs.reload'),\r\n            update: invokeExtension('tabs.update'),\r\n            remove: invokeExtension('tabs.remove'),\r\n            goBack: invokeExtension('tabs.goBack'),\r\n            goForward: invokeExtension('tabs.goForward'),\r\n            onCreated: new ExtensionEvent('tabs.onCreated'),\r\n            onRemoved: new ExtensionEvent('tabs.onRemoved'),\r\n            onUpdated: new ExtensionEvent('tabs.onUpdated'),\r\n            onActivated: new ExtensionEvent('tabs.onActivated'),\r\n            onReplaced: new ExtensionEvent('tabs.onReplaced'),\r\n          }\r\n          return api\r\n        },\r\n      },\r\n\r\n      webNavigation: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            getFrame: invokeExtension('webNavigation.getFrame'),\r\n            getAllFrames: invokeExtension('webNavigation.getAllFrames'),\r\n            onBeforeNavigate: new ExtensionEvent('webNavigation.onBeforeNavigate'),\r\n            onCommitted: new ExtensionEvent('webNavigation.onCommitted'),\r\n            onCompleted: new ExtensionEvent('webNavigation.onCompleted'),\r\n            onCreatedNavigationTarget: new ExtensionEvent(\r\n              'webNavigation.onCreatedNavigationTarget'\r\n            ),\r\n            onDOMContentLoaded: new ExtensionEvent('webNavigation.onDOMContentLoaded'),\r\n            onErrorOccurred: new ExtensionEvent('webNavigation.onErrorOccurred'),\r\n            onHistoryStateUpdated: new ExtensionEvent('webNavigation.onHistoryStateUpdated'),\r\n            onReferenceFragmentUpdated: new ExtensionEvent(\r\n              'webNavigation.onReferenceFragmentUpdated'\r\n            ),\r\n            onTabReplaced: new ExtensionEvent('webNavigation.onTabReplaced'),\r\n          }\r\n        },\r\n      },\r\n\r\n      webRequest: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            onHeadersReceived: new ExtensionEvent('webRequest.onHeadersReceived'),\r\n          }\r\n        },\r\n      },\r\n\r\n      windows: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            WINDOW_ID_NONE: -1,\r\n            WINDOW_ID_CURRENT: -2,\r\n            get: invokeExtension('windows.get'),\r\n            getCurrent: invokeExtension('windows.getCurrent'),\r\n            getLastFocused: invokeExtension('windows.getLastFocused'),\r\n            getAll: invokeExtension('windows.getAll'),\r\n            create: invokeExtension('windows.create'),\r\n            update: invokeExtension('windows.update'),\r\n            remove: invokeExtension('windows.remove'),\r\n            onCreated: new ExtensionEvent('windows.onCreated'),\r\n            onRemoved: new ExtensionEvent('windows.onRemoved'),\r\n            onFocusChanged: new ExtensionEvent('windows.onFocusChanged'),\r\n          }\r\n        },\r\n      },\r\n    }\r\n\r\n    // Initialize APIs\r\n    Object.keys(apiDefinitions).forEach((key: any) => {\r\n      const apiName: keyof typeof chrome = key\r\n      const baseApi = chrome[apiName] as any\r\n      const api = apiDefinitions[apiName]!\r\n\r\n      // Allow APIs to opt-out of being available in this context.\r\n      if (api.shouldInject && !api.shouldInject()) return\r\n\r\n      Object.defineProperty(chrome, apiName, {\r\n        value: api.factory(baseApi),\r\n        enumerable: true,\r\n        configurable: true,\r\n      })\r\n    })\r\n\r\n    // Remove access to internals\r\n    delete (window as any).electron\r\n\r\n    Object.freeze(chrome)\r\n\r\n    void 0 // no return\r\n  }\r\n\r\n  try {\r\n    // TODO: use another featured/complex name for exposed object\r\n    // Expose extension IPC to main world\r\n    contextBridge.exposeInMainWorld('electron', electronContext)\r\n\r\n    // Mutate global 'chrome' object with additional APIs in the main world.\r\n    webFrame.executeJavaScript(`(${mainWorldScript}());`)\r\n  } catch {\r\n    // contextBridge threw an error which means we're in the main world so we\r\n    // can just execute our function.\r\n    mainWorldScript()\r\n  }\r\n}\r\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { injectExtensionAPIs } from './renderer'\r\n\r\n// Only load within extension page context\r\nif (location.href.startsWith('chrome-extension://')) {\r\n  injectExtensionAPIs()\r\n}\r\n"],"names":["formatIpcName","name","ipcRenderer","listenerMap","Map","addExtensionListener","extensionId","callback","listenerCount","get","send","set","addListener","event","args","process","env","NODE_ENV","console","log","removeExtensionListener","has","delete","removeListener","contextBridge","webFrame","injectExtensionAPIs","invokeExtension","fnName","options","length","pop","undefined","noop","warn","serialize","result","invoke","e","error","electronContext","mainWorldScript","electron","window","chrome","runtime","id","manifest","getManifest","opts","imageData2base64","imageData","canvas","document","createElement","ctx","getContext","width","height","putImageData","toDataURL","ExtensionEvent","constructor","getRules","ruleIdentifiers","Error","hasListener","removeRules","addRules","rules","hasListeners","ChromeSetting","clear","apiDefinitions","browserAction","shouldInject","browser_action","factory","base","api","setTitle","getTitle","setIcon","details","ImageData","Object","entries","reduce","obj","pair","setPopup","getPopup","setBadgeText","getBadgeText","setBadgeBackgroundColor","getBadgeBackgroundColor","enable","disable","onClicked","commands","getAll","onCommand","contextMenus","menuCounter","menuCallbacks","menuCreate","hasInternalListener","addInternalListener","info","tab","menuItemId","create","createProperties","onclick","update","remove","removeAll","cookies","getAllCookieStores","onChanged","extension","isAllowedIncognitoAccess","getViews","notifications","getPermissionLevel","onButtonClicked","onClosed","privacy","network","networkPredictionEnabled","webRTCIPHandlingPolicy","websites","hyperlinkAuditingEnabled","openOptionsPage","storage","local","managed","sync","tabs","executeScript","arg1","arg2","arg3","query","active","lastFocusedWindow","activeTab","getCurrent","getAllInWindow","insertCSS","reload","goBack","goForward","onCreated","onRemoved","onUpdated","onActivated","onReplaced","webNavigation","getFrame","getAllFrames","onBeforeNavigate","onCommitted","onCompleted","onCreatedNavigationTarget","onDOMContentLoaded","onErrorOccurred","onHistoryStateUpdated","onReferenceFragmentUpdated","onTabReplaced","webRequest","onHeadersReceived","windows","WINDOW_ID_NONE","WINDOW_ID_CURRENT","getLastFocused","onFocusChanged","keys","forEach","key","apiName","baseApi","defineProperty","value","enumerable","configurable","freeze","exposeInMainWorld","executeJavaScript","location","href","startsWith"],"sourceRoot":""}